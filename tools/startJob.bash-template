#!/usr/bin/env bash
#
# This script is used in a very simple queueing system based on GNU parallel to launch
# the actual jobs.
#

set -e

# Check if the simple parallel based queue manager is initiated
if [[ "${1}" == "parallelSimpleQueueSystemStartup" ]]; then
  # The catch is, that parallel will only then start to process jobs, if the queue has been
  # full once. After that, each job will be executed, as soon it is received. Therefore, we
  # are initiating the queue with dummy jobs.
  echo "Dummy startup for the simple queue system performed."
  exit 0
fi

__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Examples to launch the jobs (the module's Dockerfile will add specific calls)
#"${__dir}/../../modules/fatbACPC/fatbACPC.bash" -i "$1" --cleanup 1>"$1/log" 2>&1
#"${__dir}/../../modules/veganbagel/veganbagel.bash" -i "$1" --cleanup 1>"$1/log" 2>&1

# Modify the options to the module using environment variables

# Per default cleanup everything
if [ ! -z ${BIA_TOTAL_CLEANUP+x} ] && [[ "${BIA_TOTAL_CLEANUP:?}" != "1" ]]; then
  parameters="--total-cleanup"
fi
# Maybe only do cleanup
if [ ! -z ${BIA_CLEANUP+x} ] && [[ "${BIA_CLEANUP:?}" == "1" ]]; then
  parameters="--cleanup"
fi

# Other module options for debugging, logging, etc.
if [ ! -z ${BIA_KEEP_WORKDIR+x} ] && [[ "${BIA_KEEP_WORKDIR:?}" == "1" ]]; then
  parameters="${parameters} --keep-workdir"
fi
if [ ! -z ${BIA_VERBOSE+x} ] && [[ "${BIA_VERBOSE:?}" == "1" ]]; then
  parameters="${parameters} -v"
fi
if [ ! -z ${BIA_DEBUG+x} ] && [[ "${BIA_DEBUG:?}" == "1" ]]; then
  parameters="${parameters} --debug"
fi
if [ ! -z ${BIA_NO_PACS+x} ] && [[ "${BIA_NO_PACS:?}" == "1" ]]; then
  parameters="${parameters} --no-pacs"
fi

# Either write and keep log - or don't (default)
if [ ! -z ${BIA_WRITE_LOG+x} ] && [[ "${BIA_WRITE_LOG:?}" == "1" ]]; then
  "${__dir}/../../${BIA_MODULE}.bash" -i "$1" ${parameters} 2>&1 | tee "$1/log"
else
  "${__dir}/../../${BIA_MODULE}.bash" -i "$1" ${parameters}
fi
